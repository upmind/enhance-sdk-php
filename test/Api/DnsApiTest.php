<?php
/**
 * DnsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 12.3.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Upmind\EnhanceSdk\Test\Api;

use \Upmind\EnhanceSdk\Configuration;
use \Upmind\EnhanceSdk\ApiException;
use \Upmind\EnhanceSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DnsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DnsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createDefaultDnsRecord
     *
     * Create a default DNS record.
     *
     */
    public function testCreateDefaultDnsRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createDnsThirdPartyProvider
     *
     * Create new third party provider..
     *
     */
    public function testCreateDnsThirdPartyProvider()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createWebsiteDomainDnsZoneRecord
     *
     * Create a new dns record for website domain.
     *
     */
    public function testCreateWebsiteDomainDnsZoneRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDefaultDnsRecord
     *
     * Delete a default DNS record.
     *
     */
    public function testDeleteDefaultDnsRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDnsThirdPartyProvider
     *
     * Deletes a third party dns provider..
     *
     */
    public function testDeleteDnsThirdPartyProvider()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWebsiteDomainDnsZoneRecord
     *
     * Delete dns zone record.
     *
     */
    public function testDeleteWebsiteDomainDnsZoneRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableDomainDnsSec
     *
     * Disable DNSSEC on this domain.
     *
     */
    public function testDisableDomainDnsSec()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for enableDomainDnsSec
     *
     * Enable DNSSEC on this domain.
     *
     */
    public function testEnableDomainDnsSec()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDnsThirdPartyProviders
     *
     * Lists all third party providers..
     *
     */
    public function testGetDnsThirdPartyProviders()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteDomainDnsZone
     *
     * Get a dns zone for given domain.
     *
     */
    public function testGetWebsiteDomainDnsZone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listDefaultDnsRecords
     *
     * List default DNS records.
     *
     */
    public function testListDefaultDnsRecords()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDefaultDnsRecord
     *
     * Update a default DNS record.
     *
     */
    public function testUpdateDefaultDnsRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWebsiteDomainDnsZone
     *
     * Updates a dns zone SOA for website domain.
     *
     */
    public function testUpdateWebsiteDomainDnsZone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWebsiteDomainDnsZoneRecord
     *
     * Updates a dns record for given domain.
     *
     */
    public function testUpdateWebsiteDomainDnsZoneRecord()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
