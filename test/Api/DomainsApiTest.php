<?php
/**
 * DomainsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 12.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Upmind\EnhanceSdk\Test\Api;

use \Upmind\EnhanceSdk\Configuration;
use \Upmind\EnhanceSdk\ApiException;
use \Upmind\EnhanceSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DomainsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DomainsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for checkDomain
     *
     * Check if a domain can be created.
     *
     */
    public function testCheckDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createWebsiteDomainLetsencryptCerts
     *
     * Generate and setup letsencrypt ssl certificates for website's domain.
     *
     */
    public function testCreateWebsiteDomainLetsencryptCerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createWebsiteMailDomainLetsencryptCerts
     *
     * Generate and setup letsencrypt ssl certificates for website's domain with mail. prefix..
     *
     */
    public function testCreateWebsiteMailDomainLetsencryptCerts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createWebsiteMappedDomain
     *
     * Create website mapped domain.
     *
     */
    public function testCreateWebsiteMappedDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCloudflareApiKeyId
     *
     * Delete CloudFlare API key, domain level.
     *
     */
    public function testDeleteCloudflareApiKeyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDomain
     *
     * Delete domain.
     *
     */
    public function testDeleteDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWebsiteDomainMapping
     *
     * Delete website domain mapping.
     *
     */
    public function testDeleteWebsiteDomainMapping()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWebsiteDomainVhost
     *
     * Deletes domain's custom vhost file if any.
     *
     */
    public function testDeleteWebsiteDomainVhost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudflareApiKeyDomain
     *
     * Get CloudFlare API key, domain level.
     *
     */
    public function testGetCloudflareApiKeyDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudflareNameServers
     *
     * Get CloudFlare name servers.
     *
     */
    public function testGetCloudflareNameServers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDomainAuthNs
     *
     * Get authoritative nameservers for domain..
     *
     */
    public function testGetDomainAuthNs()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDomains
     *
     * Get domains.
     *
     */
    public function testGetDomains()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteDomainDnsQuery
     *
     * Recursively query Dns servers for given domain.
     *
     */
    public function testGetWebsiteDomainDnsQuery()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteDomainMapping
     *
     * Returns website domain mapping.
     *
     */
    public function testGetWebsiteDomainMapping()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteDomainMappingDnsStatus
     *
     * Returns website domain mapping DNS status.
     *
     */
    public function testGetWebsiteDomainMappingDnsStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteDomainMappings
     *
     * Get website's mapped domains.
     *
     */
    public function testGetWebsiteDomainMappings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteDomainModSecStatus
     *
     * Get mod security status for a single domain.
     *
     */
    public function testGetWebsiteDomainModSecStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteDomainVhost
     *
     * Get domain's custom vhost file, if the file does not exist return empty string.
     *
     */
    public function testGetWebsiteDomainVhost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for performLetsEncryptPreflightCheck
     *
     * Perform the LetsEncrypt preflight check.
     *
     */
    public function testPerformLetsEncryptPreflightCheck()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setCloudflareApiKeyId
     *
     * Set CloudFlare API key, domain level.
     *
     */
    public function testSetCloudflareApiKeyId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWebsiteDomainModSecStatus
     *
     * Set mod security status on a single domain.
     *
     */
    public function testSetWebsiteDomainModSecStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWebsiteDomainVhost
     *
     * Set a custom vhost file.
     *
     */
    public function testSetWebsiteDomainVhost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWebsiteDomainMapping
     *
     * Update website domain mapping.
     *
     */
    public function testUpdateWebsiteDomainMapping()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWebsitePrimaryDomain
     *
     * Update primary domain mapping.
     *
     */
    public function testUpdateWebsitePrimaryDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
