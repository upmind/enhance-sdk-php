<?php
/**
 * OrgsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 12.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Upmind\EnhanceSdk\Test\Api;

use \Upmind\EnhanceSdk\Configuration;
use \Upmind\EnhanceSdk\ApiException;
use \Upmind\EnhanceSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * OrgsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrgsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createAccessToken
     *
     * Create organisation access token.
     *
     */
    public function testCreateAccessToken()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCloudflareApiKey
     *
     * Set CloudFlare API key, org level.
     *
     */
    public function testCreateCloudflareApiKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCustomer
     *
     * Create a customer organization.
     *
     */
    public function testCreateCustomer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createMember
     *
     * Create organization member.
     *
     */
    public function testCreateMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPlan
     *
     * Create plan.
     *
     */
    public function testCreatePlan()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPlanAllowances
     *
     * Create plan allowances.
     *
     */
    public function testCreatePlanAllowances()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPlanResources
     *
     * Create plan resources.
     *
     */
    public function testCreatePlanResources()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPlanSelections
     *
     * Create plan selections.
     *
     */
    public function testCreatePlanSelections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createTag
     *
     * Create tag.
     *
     */
    public function testCreateTag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteCloudflareApiKey
     *
     * Delete CloudFlare API key, org level.
     *
     */
    public function testDeleteCloudflareApiKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteMember
     *
     * Delete organization member.
     *
     */
    public function testDeleteMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrg
     *
     * Delete organization.
     *
     */
    public function testDeleteOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOrgAvatar
     *
     * Remove org avatar.
     *
     */
    public function testDeleteOrgAvatar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteOwner
     *
     * Delete organization owner.
     *
     */
    public function testDeleteOwner()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePlan
     *
     * Delete plan.
     *
     */
    public function testDeletePlan()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePlanAllowance
     *
     * Delete plan allowance.
     *
     */
    public function testDeletePlanAllowance()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWebsiteMySQLUserAccessHosts
     *
     * Delete website MySQL database user access hosts.
     *
     */
    public function testDeleteWebsiteMySQLUserAccessHosts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudFlareKeyAffectedDomains
     *
     * Get affected domains for a CloudFlare key.
     *
     */
    public function testGetCloudFlareKeyAffectedDomains()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCloudflareApiKeys
     *
     * Get CloudFlare API keys, org level.
     *
     */
    public function testGetCloudflareApiKeys()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCustomersAdded
     *
     * Get customers added over a given time period.
     *
     */
    public function testGetCustomersAdded()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmails
     *
     * Get org emails.
     *
     */
    public function testGetEmails()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMember
     *
     * Get organization member.
     *
     */
    public function testGetMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMembers
     *
     * Get organization members.
     *
     */
    public function testGetMembers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrg
     *
     * Get organization info.
     *
     */
    public function testGetOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrgActivities
     *
     * Get organization's activity log..
     *
     */
    public function testGetOrgActivities()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOrgMemberLogin
     *
     * Get a One-Time-Password link for the member.
     *
     */
    public function testGetOrgMemberLogin()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPlan
     *
     * Get plan.
     *
     */
    public function testGetPlan()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPlans
     *
     * Get plans.
     *
     */
    public function testGetPlans()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getTags
     *
     * Get tags.
     *
     */
    public function testGetTags()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteDomainSslCert
     *
     * Returns the SSL for this website domain.
     *
     */
    public function testGetWebsiteDomainSslCert()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteMailDomainSslCert
     *
     * Returns the SSL for this website domain with the mail.prefix.
     *
     */
    public function testGetWebsiteMailDomainSslCert()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsitesAdded
     *
     * Get websites added over a given time period.
     *
     */
    public function testGetWebsitesAdded()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOrgAvatar
     *
     * Set org avatar.
     *
     */
    public function testSetOrgAvatar()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWebsiteDomainForceSsl
     *
     * Set \"force ssl\" status for domain mapping.
     *
     */
    public function testSetWebsiteDomainForceSsl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCloudflareApiKey
     *
     * Update CloudFlare API key.
     *
     */
    public function testUpdateCloudflareApiKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateMember
     *
     * Overwrite organization member settings.
     *
     */
    public function testUpdateMember()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOrg
     *
     * Update organization.
     *
     */
    public function testUpdateOrg()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOwner
     *
     * Update organization owner.
     *
     */
    public function testUpdateOwner()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePlan
     *
     * Update plan name.
     *
     */
    public function testUpdatePlan()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePlanAllowance
     *
     * Update plan allowance.
     *
     */
    public function testUpdatePlanAllowance()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePlanResource
     *
     * Update plan resource.
     *
     */
    public function testUpdatePlanResource()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePlanSelection
     *
     * Update plan selection.
     *
     */
    public function testUpdatePlanSelection()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadWebsiteDomainSslCert
     *
     * Upload custom ssl certificate, key and optional fullchain for a given website.
     *
     */
    public function testUploadWebsiteDomainSslCert()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uploadWebsiteMailDomainSslCert
     *
     * Upload SSL for mail.customerdomain..
     *
     */
    public function testUploadWebsiteMailDomainSslCert()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
