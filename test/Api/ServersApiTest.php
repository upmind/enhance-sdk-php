<?php
/**
 * ServersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 12.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Upmind\EnhanceSdk\Test\Api;

use \Upmind\EnhanceSdk\Configuration;
use \Upmind\EnhanceSdk\ApiException;
use \Upmind\EnhanceSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ServersApiTest Class Doc Comment
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ServersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addSpamIpWhitelist
     *
     * Add to the IP whitelist.
     *
     */
    public function testAddSpamIpWhitelist()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for configureServer
     *
     * Configure a server.
     *
     */
    public function testConfigureServer()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createServerDomain
     *
     * Create a domain which is mapped to a server.
     *
     */
    public function testCreateServerDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createServerGroup
     *
     * Creates a new server group.
     *
     */
    public function testCreateServerGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createServerNetworkInterfaceIp
     *
     * Create server network interface secondary IP.
     *
     */
    public function testCreateServerNetworkInterfaceIp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createSlave
     *
     * Create a slave node.
     *
     */
    public function testCreateSlave()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteFromSpamIpWhitelist
     *
     * Delete from the IP whitelist.
     *
     */
    public function testDeleteFromSpamIpWhitelist()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteServerDomain
     *
     * Delete a mapped server domain.
     *
     */
    public function testDeleteServerDomain()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteServerFromGroup
     *
     * Delete server from group.
     *
     */
    public function testDeleteServerFromGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteServerGroup
     *
     * Deletes an existing server group.
     *
     */
    public function testDeleteServerGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteServerNetworkInterfaceIp
     *
     * Delete server network interface secondary IP.
     *
     */
    public function testDeleteServerNetworkInterfaceIp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteServerPrimaryIpv6
     *
     * Deletes/unsets the primary IPv6 address for a server..
     *
     */
    public function testDeleteServerPrimaryIpv6()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteServiceSetting
     *
     * Delete a single override setting.
     *
     */
    public function testDeleteServiceSetting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteSlave
     *
     * Delete a (slave) server.
     *
     */
    public function testDeleteSlave()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for enableFsQuotaLimits
     *
     * Enable FS quota limits on the server.
     *
     */
    public function testEnableFsQuotaLimits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAppcdScreenshotConfig
     *
     * Get the screenshot config of the running appcd.
     *
     */
    public function testGetAppcdScreenshotConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAppcdVersion
     *
     * Get the version of the running appcd.
     *
     */
    public function testGetAppcdVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getClientIp
     *
     * Reflect back the IP of the API consumer.
     *
     */
    public function testGetClientIp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDatabaseRoleMysqlKind
     *
     * Gets the MySQL kind for a given server..
     *
     */
    public function testGetDatabaseRoleMysqlKind()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDnsPoolIps
     *
     * Get DNS pool IPs.
     *
     */
    public function testGetDnsPoolIps()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEmailServerHostnameOverride
     *
     * Get the hostname override for the email server (postfix) if set.
     *
     */
    public function testGetEmailServerHostnameOverride()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getFsQuotaStatus
     *
     * Get whether FS quota was enabled on the server.
     *
     */
    public function testGetFsQuotaStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getHttpdStatus
     *
     * Get status of a running httpd server..
     *
     */
    public function testGetHttpdStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getInstallCmd
     *
     * Get slave installation command.
     *
     */
    public function testGetInstallCmd()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getMysqlMyCnf
     *
     * Download my.cnf for a given server.
     *
     */
    public function testGetMysqlMyCnf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOutboundSpamScanningSettings
     *
     * Get the status of outbound spam scanning.
     *
     */
    public function testGetOutboundSpamScanningSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOwaspRulesVersion
     *
     * Get the current and available version of the OWASP rules.
     *
     */
    public function testGetOwaspRulesVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRegistrationKey
     *
     * Get slave registration key.
     *
     */
    public function testGetRegistrationKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerDiskUsage
     *
     * Get server disk usage.
     *
     */
    public function testGetServerDiskUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerFpmSettings
     *
     * Get php-fpm config for all the websites on a server.
     *
     */
    public function testGetServerFpmSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerGroups
     *
     * Returns all server groups.
     *
     */
    public function testGetServerGroups()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerHostnameWebsite
     *
     * Get domains which are mapped to a server.
     *
     */
    public function testGetServerHostnameWebsite()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerInfo
     *
     * Get server info.
     *
     */
    public function testGetServerInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerIowait
     *
     * Get server iowait.
     *
     */
    public function testGetServerIowait()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerLoad
     *
     * Get server system load.
     *
     */
    public function testGetServerLoad()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerMemoryUsage
     *
     * Get server memory usage.
     *
     */
    public function testGetServerMemoryUsage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerModSecurityConfig
     *
     * Get mod security config.
     *
     */
    public function testGetServerModSecurityConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerModSecurityStatus
     *
     * Get mod security status for a server.
     *
     */
    public function testGetServerModSecurityStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerNetworkInterfaces
     *
     * Get server network interfaces.
     *
     */
    public function testGetServerNetworkInterfaces()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerNetworkStats
     *
     * Get server network stats.
     *
     */
    public function testGetServerNetworkStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerRole
     *
     * Get server role info.
     *
     */
    public function testGetServerRole()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerRoles
     *
     * Get server roles info.
     *
     */
    public function testGetServerRoles()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerStats
     *
     * Get Server stats.
     *
     */
    public function testGetServerStats()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerStatus
     *
     * Get server status.
     *
     */
    public function testGetServerStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServerUptime
     *
     * Get server uptime in seconds.
     *
     */
    public function testGetServerUptime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServers
     *
     * Get installed servers.
     *
     */
    public function testGetServers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServiceSetting
     *
     * Get the value for a particular setting.
     *
     */
    public function testGetServiceSetting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSmtpRateLimitHourly
     *
     * Get the hourly SMTP rate limit.
     *
     */
    public function testGetSmtpRateLimitHourly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSpamIpWhitelist
     *
     * Get the IP whitelist.
     *
     */
    public function testGetSpamIpWhitelist()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSystemPackageUpdateInfo
     *
     * Returns a map of upgradable packages..
     *
     */
    public function testGetSystemPackageUpdateInfo()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebserverKind
     *
     * Get web server.
     *
     */
    public function testGetWebserverKind()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteFpmSettings
     *
     * Get php-fpm config for the specified website.
     *
     */
    public function testGetWebsiteFpmSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWebsiteGeneratedRateLimitHourly
     *
     * Get the hourly website generated email rate limit.
     *
     */
    public function testGetWebsiteGeneratedRateLimitHourly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for installDatabaseRole
     *
     * Enables the database role on a given ServerUuid.
     *
     */
    public function testInstallDatabaseRole()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for installServerRole
     *
     * Install server role.
     *
     */
    public function testInstallServerRole()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetServerModSecurityConfig
     *
     * Delete custom mod_security config and reset to default.
     *
     */
    public function testResetServerModSecurityConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetWebServerConfig
     *
     * Reset the config for the web server to default..
     *
     */
    public function testResetWebServerConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for restartMysql
     *
     * Restart MySQL gracefully.
     *
     */
    public function testRestartMysql()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for saveMysqlMyCnf
     *
     * Save a new my.cnf.
     *
     */
    public function testSaveMysqlMyCnf()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setEmailServerHostnameOverride
     *
     * Set the hostname override for the email server (postfix).
     *
     */
    public function testSetEmailServerHostnameOverride()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setLiteSpeedAdminPassword
     *
     * Set a new LiteSpeed admin password..
     *
     */
    public function testSetLiteSpeedAdminPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setOutboundSpamScanningSettings
     *
     * Set the settings for outbound spam scanning.
     *
     */
    public function testSetOutboundSpamScanningSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setServerDecommissioned
     *
     * Set server to decommissioned.
     *
     */
    public function testSetServerDecommissioned()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setServerModSecurityConfig
     *
     * Set mod security config.
     *
     */
    public function testSetServerModSecurityConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setServerModSecurityStatus
     *
     * Set mod security status for a server.
     *
     */
    public function testSetServerModSecurityStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setServerStatus
     *
     * Set the status of one server..
     *
     */
    public function testSetServerStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setServiceSetting
     *
     * Set a single service setting.
     *
     */
    public function testSetServiceSetting()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setSmtpRateLimitHourly
     *
     * Set the hourly SMTP rate limit.
     *
     */
    public function testSetSmtpRateLimitHourly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWebserverKind
     *
     * Set the web server kind for one server..
     *
     */
    public function testSetWebserverKind()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWebsiteGeneratedRateLimitHourly
     *
     * Set the hourly SMTP rate limit.
     *
     */
    public function testSetWebsiteGeneratedRateLimitHourly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for uninstallServerRole
     *
     * Uninstall a server role.
     *
     */
    public function testUninstallServerRole()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAppcdScreenshotConfig
     *
     * Update the screenshot config of the running appcd.
     *
     */
    public function testUpdateAppcdScreenshotConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateOwaspRules
     *
     * Upgrade OWASP rules.
     *
     */
    public function testUpdateOwaspRules()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateServerGroup
     *
     * Updates an existing server group's name.
     *
     */
    public function testUpdateServerGroup()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateServerPrimaryIp
     *
     * Updates the primary IP of the server in the database and in-memory metadata. This operation will not affect the IP used for service communication until the next restart of orchd. The new IP will be used for creation of new resources such as websites on this server but existing websites will not have their IP changed..
     *
     */
    public function testUpdateServerPrimaryIp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateServerPrimaryIpv6
     *
     * Updates or sets the primary ipv6 address of the server.  This endpoint will not change existing websites' DNS but the new record will be applied to all future zones..
     *
     */
    public function testUpdateServerPrimaryIpv6()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateServerRole
     *
     * Update server role.
     *
     */
    public function testUpdateServerRole()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateSystemPackage
     *
     * Updates a system package to its latest version..
     *
     */
    public function testUpdateSystemPackage()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for validateRegistrationKey
     *
     * Validate slave registration key.
     *
     */
    public function testValidateRegistrationKey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
