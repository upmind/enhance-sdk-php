<?php
/**
 * WordpressApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 12.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Upmind\EnhanceSdk\Test\Api;

use \Upmind\EnhanceSdk\Configuration;
use \Upmind\EnhanceSdk\ApiException;
use \Upmind\EnhanceSdk\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * WordpressApiTest Class Doc Comment
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class WordpressApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for activateWordpressTheme
     *
     * Activate a WordPress theme.
     *
     */
    public function testActivateWordpressTheme()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createWordpressUser
     *
     * Create website WordPress user.
     *
     */
    public function testCreateWordpressUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWordpressPlugin
     *
     * Delete website WordPress plugin.
     *
     */
    public function testDeleteWordpressPlugin()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWordpressTheme
     *
     * Delete a WordPress theme.
     *
     */
    public function testDeleteWordpressTheme()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteWordpressUser
     *
     * Delete WordPress user.
     *
     */
    public function testDeleteWordpressUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDefaultWpSsoUser
     *
     * .
     *
     */
    public function testGetDefaultWpSsoUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordPressMaintenanceMode
     *
     * Gets the MaintenanceMode for a WordPress installation.
     *
     */
    public function testGetWordPressMaintenanceMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordPressSiteurl
     *
     * Fetches the site URL for a WordPress installation.
     *
     */
    public function testGetWordPressSiteurl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressAppVersion
     *
     * Get WordPress version.
     *
     */
    public function testGetWordpressAppVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressConfig
     *
     * Get the WP config value for a given option.
     *
     */
    public function testGetWordpressConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressInstallations
     *
     * Trigger discovery of WP installations.
     *
     */
    public function testGetWordpressInstallations()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressLatestVersion
     *
     * Get WordPress latest available version.
     *
     */
    public function testGetWordpressLatestVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressPlugins
     *
     * Get website WordPress plugins.
     *
     */
    public function testGetWordpressPlugins()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressSettings
     *
     * Get Wordpress application settings.
     *
     */
    public function testGetWordpressSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressThemes
     *
     * Get website WordPress themes.
     *
     */
    public function testGetWordpressThemes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressUserSsoUrl
     *
     * Get SSO URL for a WP user.
     *
     */
    public function testGetWordpressUserSsoUrl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getWordpressUsers
     *
     * .
     *
     */
    public function testGetWordpressUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for installWordpressPlugin
     *
     * Install a plugin.
     *
     */
    public function testInstallWordpressPlugin()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for installWordpressTheme
     *
     * Install a WordPress theme.
     *
     */
    public function testInstallWordpressTheme()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setDefaultWpSsoUser
     *
     * Set WP user as the default SSO user for that website..
     *
     */
    public function testSetDefaultWpSsoUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWordPressMaintenanceMode
     *
     * Sets the MaintenanceMode for a WordPress installation.
     *
     */
    public function testSetWordPressMaintenanceMode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWordPressSiteurl
     *
     * Sets the site URL for a WordPress installation.
     *
     */
    public function testSetWordPressSiteurl()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWordpressConfig
     *
     * Set a single value of a wp-config.php entry..
     *
     */
    public function testSetWordpressConfig()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setWordpressThemeAutoUpdateStatus
     *
     * Set WordPress theme auto-update status.
     *
     */
    public function testSetWordpressThemeAutoUpdateStatus()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWordpressAppVersion
     *
     * Update website WP app to specific version or latest.
     *
     */
    public function testUpdateWordpressAppVersion()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWordpressPluginSettings
     *
     * Updates website WordPress plugin settings.
     *
     */
    public function testUpdateWordpressPluginSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWordpressPluginToLatest
     *
     * Updates website WordPress plugin to latest version.
     *
     */
    public function testUpdateWordpressPluginToLatest()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWordpressSettings
     *
     * Update Wordpress app settings.
     *
     */
    public function testUpdateWordpressSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWordpressTheme
     *
     * Update a WordPress theme.
     *
     */
    public function testUpdateWordpressTheme()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateWordpressUser
     *
     * Update WordPress user.
     *
     */
    public function testUpdateWordpressUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
