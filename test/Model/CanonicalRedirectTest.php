<?php
/**
 * CanonicalRedirectTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 12.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Upmind\EnhanceSdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * CanonicalRedirectTest Class Doc Comment
 *
 * @category    Class
 * @description If this object is present, the website&#39;s .htaccess will have a new set of rules which redirect all secondary domains to this primary domain with 301 header. If this object is missing, any existing rules will be removed.
 * @package     Upmind\EnhanceSdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class CanonicalRedirectTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "CanonicalRedirect"
     */
    public function testCanonicalRedirect()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "use_www"
     */
    public function testPropertyUseWww()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "use_https"
     */
    public function testPropertyUseHttps()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
