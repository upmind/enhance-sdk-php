<?php
/**
 * MetricsEntryTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Upmind\EnhanceSdk
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * orchd
 *
 * orchd API docs
 *
 * The version of the OpenAPI document: 12.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.11.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Upmind\EnhanceSdk\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * MetricsEntryTest Class Doc Comment
 *
 * @category    Class
 * @description Each Metrics entry represts an hourly window of banwidth usage Note: depending upon the polling time, most recent hour values might not       be complete yet and are subject to change if fetched at a later time.
 * @package     Upmind\EnhanceSdk
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class MetricsEntryTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "MetricsEntry"
     */
    public function testMetricsEntry()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "datetime"
     */
    public function testPropertyDatetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bytes_received"
     */
    public function testPropertyBytesReceived()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bytes_sent"
     */
    public function testPropertyBytesSent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unique_hits"
     */
    public function testPropertyUniqueHits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bot_hits"
     */
    public function testPropertyBotHits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_hits"
     */
    public function testPropertyTotalHits()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
